/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views;

import Controllers.UserController;
import Models.User;
import java.awt.Frame;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;

import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Ricardo
 */
public class UserView extends javax.swing.JPanel {
    UserController userCtl;
    Object[][] data;
    String[] column;
    TableERP tableERP;
    UserView_add userViewAdd;
    UserView_update userViewUpdate;
    int selectedUpdatedRow;

    /**
     * Creates new form UserView
     */
    public UserView() {
        initComponents();
        // Sử dụng DocumentListener theo dõi hoạt động sửa thuộc tính/thêm/xoá nội dung, nếu rỗng thì cho phép trường còn lại edit được, nếu không rỗng thì khoá.
        fieldMaNV.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                disableField();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                disableField();
            }
            @Override
            public void insertUpdate(DocumentEvent e) {
                disableField();
            }

            public void disableField() {
                if (fieldMaNV.getText().trim().isEmpty()) {
                    fieldTenTK.setEnabled(true);
                } else {
                    fieldTenTK.setEnabled(false);
                }
            }
        });
        fieldTenTK.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                disableField();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                disableField();
            }
            @Override
            public void insertUpdate(DocumentEvent e) {
                disableField();
            }

            public void disableField() {
                if (fieldTenTK.getText().trim().isEmpty()) {
                    fieldMaNV.setEnabled(true);
                } else {
                    fieldMaNV.setEnabled(false);
                }
            }
        });

    }
    
    public void setController(UserController userCtl) {
        this.userCtl = userCtl;
        column = userCtl.getColumns();
    }
    
    public void setData(Object[][] data) {
        this.data = data;
    }

    public TableERP getTableERP() {
        return tableERP;
    }

//    public UserView_add getUserViewAdd() {
//        return userViewAdd;
//    }
//    
//    public UserView_update getUserViewUpdate() {
//        return this.userViewUpdate;
//    }

    public JTable getTbUser() {
        return tbUser;
    }

    
    public int getSelectedUpdatedRow() {
        return selectedUpdatedRow;
    }
    
    public String[] getSearchParams(){
        String[] searchParams = new String[2];
        searchParams[0] = fieldMaNV.getText();
        searchParams[1] = fieldTenTK.getText();
        return searchParams;
    } 
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbUser = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnLoad = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        fieldTenTK = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        fieldMaNV = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Quản lý DS User"));

        tbUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã NV", "Tên tài khoản", "Mật khẩu", "Họ", "Tên", "Chức vụ", "Phòng ban", "Địa chỉ", "Số điện thoại", "Quyền"
            }
        ));
        tbUser.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbUser.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbUser.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tbUser);

        btnDelete.setText("Xoá");

        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnLoad.setText("Load");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm"));

        jLabel1.setText("Mã NV");

        btnSearch.setText("Tìm kiếm");

        jLabel2.setText("Tên Tài khoản");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldTenTK, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                .addComponent(btnSearch)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fieldMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(jLabel2)
                    .addComponent(fieldTenTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLoad)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnLoad)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here
        if (tableERP != null){
            Frame frame = (Frame) SwingUtilities.getWindowAncestor(this);
            UserView_add userViewAdd = new UserView_add(frame, true, userCtl);
            userCtl.setViewAdd(userViewAdd); // kích hoạt lắng nghe ở UserController
            userViewAdd.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(this, "Vui lòng load dữ liệu trước");
        }
        
        //this.setVisible(false);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (tableERP != null){
            // Lấy hàng được chọn từ tableERP
            selectedUpdatedRow = tbUser.getSelectedRow();
            if (selectedUpdatedRow == -1){
                JOptionPane.showMessageDialog(this, "Vui lòng chọn hàng cần cập nhật");
                return;
            }
            // Lấy dữ liệu từ hàng được chọn
            Object[] rowData = new Object[column.length];
            for (int i = 0; i < column.length; i++){
                rowData[i] = tbUser.getValueAt(selectedUpdatedRow, i);
            }
            // Mở cửa sổ UserView_update
            Frame frame = (Frame) SwingUtilities.getWindowAncestor(this);
            this.userViewUpdate = new UserView_update(frame, true, userCtl, rowData);
            userCtl.setViewUpdate(userViewUpdate); // kích hoạt lắng nghe trên UserController
            this.userViewUpdate.setRowData(rowData);
            this.userViewUpdate.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(this, "Vui lòng load dữ liệu trước");
        } 
    }//GEN-LAST:event_btnUpdateActionPerformed
    
    
    public void btnLoadActionListener(ActionListener listener) {
        System.out.println("btnLoad Listener is listening");
        btnLoad.addActionListener(listener);
    }
    
    public void loadData() {        
        tableERP = new TableERP(data, column);
        tbUser.setModel(tableERP);
    }
    
    
    public void updateTable(){
        tbUser.setModel(tableERP);
    }
    
    public void btnDeleteActionListener(ActionListener listener){
        btnDelete.addActionListener(listener);
    };
    
    public void btnSearchActionListener(ActionListener listener){
        btnSearch.addActionListener(listener);
    }
    
//    // Tìm Mã nhân viên lớn nhất
//    public int getMaxMaNV() {
//        int rowCount = tableERP.getRowCount();
//        int maxMaNV = 0;
//        for (int i = 0; i < rowCount; i++) {
//            if (maxMaNV < ((int)tableERP.getValueAt(i, 0))){
//                maxMaNV = (int)tableERP.getValueAt(i, 0);
//            }
//        }
//        return maxMaNV;
//    };
//    // Kiểm tra tên tài khoản có trùng không
//    public boolean isDuplicateMaNV(String tenTK) {
//        boolean trung = false; // 
//        int rowCount = tableERP.getRowCount();
//        for (int i = 0; i < rowCount; i++) {
//            if (tableERP.getValueAt(i, 1).equals(tenTK)){
//                trung = true;
//                return trung;
//            }
//        }
//        return trung;
//    };
    


    
    
 
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextField fieldMaNV;
    private javax.swing.JTextField fieldTenTK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbUser;
    // End of variables declaration//GEN-END:variables


    
}
